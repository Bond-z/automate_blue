name: Build and Test

on: [push]


jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # install the python version needed
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
  # - name: Build
  #   run: |
  #     # Add your build commands here
  test_func01:
    runs-on: windows-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        robot -i func -d report/ -o "output_01.xml" testcases/func1/*.robot


    # - name: merge logs
    #   run: |
    #     rebot -d report/ -o "output_pub.xml" -l "log_pub.html" -r "report_pub.html" --merge report/output_01.xml report/output_02.xml

  test_func02:
    runs-on: windows-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run tests
      run: |
        robot -i two -d report/ -o "output_02.xml" testcases/func2/calculate2.robot

    
  merge_log:
    runs-on: windows-latest
    needs: [build, test_func01, test_func02]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: merge logs
      run: |
        mkdir public
        mv report/* public/
        ls public/
        rebot -d public -o "output_pub.xml" -l "log_pub.html" -r "report_pub.html" --merge -d report report/output_01.xml report/output_02.xml
    
    
    # - name: Send report to Slack
    #   if: always()
    #   uses: rtCamp/action-slack-notify@v3
    #   with:
    #     status: ${{ job.status }}
    #     text: "Test report: ${{ github.event.repository.name }} ${{ github.sha }}\nView report: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
    #   env:
    #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
